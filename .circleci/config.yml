version: 2.1

orbs:
  slack: circleci/slack@4.0.1

commands:
 
parameters:
  working_directory:
    type: string
    default: ~/jieba-tw
  python_version:
    type: string
    default: "3.8"

jobs: # A basic unit of work in a run
  test: # runs not using Workflows must have a `build` job as entry point
    working_directory: << pipeline.parameters.working_directory >>
    parameters:
      python_version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python_version >>
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /home/circleci/.pyenv
      # - restore_cache:
      #     key: ml-utils-{{ .Branch }}-<< parameters.python_version >>-{{ checksum "Pipfile.lock" }}
      - run: 
            command: |
              pip install jieba
      # - save_cache:
      #     key: jieba-tw-{{ .Branch }}-<< parameters.python_version >>-{{ checksum "Pipfile.lock" }}
      #     paths:
      #       - ".venv"
      #       - "/usr/local/bin"
      #       - "/usr/local/lib/python<< pipeline.parameters.python_version >>/site-packages"
      # - run:
      #     name: Linter, Type Checking, Black
      #     command: |
      #       pipenv run lint
      #       pipenv run mypy --config-file mypy.ini ml_utils
      #       pipenv run black --check --diff .
      # - run:
      #     command: |
      #       pipenv run test
      # - store_test_results:
      #     path: reports
      # - slack_notify_if_failed

  build:
    working_directory: << pipeline.parameters.working_directory >>
    docker:
      - image: circleci/python:<< pipeline.parameters.python_version >>
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python<< pipeline.parameters.python_version >>/site-packages
      - run:
          name: Build library
          command: python setup.py bdist_wheel
      - persist_to_workspace:
          root: << pipeline.parameters.working_directory >>
          paths: .
      # - slack_notify_if_failed

  deploy_library:
    working_directory: << pipeline.parameters.working_directory >>
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.5
    steps:
      - attach_workspace:
          at: << pipeline.parameters.working_directory >>
      - run:
          name: Install package_cloud
          command: |
            gem install package_cloud
      - run:
          name: Deploy to package cloud
          command: package_cloud push cookpad-global/python-internal/python ./dist/*
      # - slack_notify_if_failed

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test:
          name: Python << matrix.python_version >> tests
          context:
            - slack_orbs
          filters:
            tags:
              only: /.*/
          matrix:
            parameters:
              python_version: [ "3.8", "3.9", "3.10" ]
      - build:
          # requires:
          #   - test
          filters:
            tags:
              only: /.*/
      - deploy_library:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
