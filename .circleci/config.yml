version: 2.1

orbs:
  slack: circleci/slack@4.0.1

commands:
  slack_notify_if_failed:
    description: >
      Notify Slack if a CI failure occured on the branch. Use this command as the final
      step of a job.
    steps:
      - slack/notify:
          event: fail
          branch_pattern: main
          mentions: '@ml-platform'
          custom: |
            {
            	"blocks": [
            		{
            			"type": "section",
            			"text": {
            				"type": "mrkdwn",
            				"text": "Your job *${CIRCLE_JOB}* in *${CIRCLE_PROJECT_REPONAME}* has failed ⚠️ "
            			},
            			"fields": [
            				{
            					"type": "mrkdwn",
            					"text": "*Commiter*:\\n${CIRCLE_USERNAME}"
            				},
            				{
            					"type": "mrkdwn",
            					"text": "*Branch*:\\n${CIRCLE_BRANCH}"
            				},
            				{
            					"type": "mrkdwn",
            					"text": "*Mentions*:\\n${SLACK_PARAM_MENTIONS}"
            				},
            				{
            					"type": "mrkdwn",
            					"text": "*SHA*:\\n${CIRCLE_SHA1}"
            				}
            			],
            			"accessory": {
            				"type": "image",
            				"image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
            				"alt_text": "CircleCI logo"
            			}
            		},
            		{
            			"type": "actions",
            			"elements": [
            				{
            					"type": "button",
            					"text": {
            						"type": "plain_text",
            						"text": "View Job"
            					},
            					"url": "${CIRCLE_BUILD_URL}"
            				}
            			]
            		}
            	]
            }
 
parameters:
  working_directory:
    type: string
    default: ~/jieba_tw
  python_version:
    type: string
    default: "3.8"

jobs: # A basic unit of work in a run
  test: # runs not using Workflows must have a `build` job as entry point
    working_directory: << pipeline.parameters.working_directory >>
    parameters:
      python_version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python_version >>
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /home/circleci/.pyenv
      - restore_cache:
          key: jieba-tw-{{ .Branch }}-<< parameters.python_version >>-{{ checksum "Pipfile.lock" }}
      - run: 
            command: |
              pipenv sync --dev
      - save_cache:
          key: jieba_tw-{{ .Branch }}-<< parameters.python_version >>-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python<< pipeline.parameters.python_version >>/site-packages"
      - run:
          command: |
            pipenv run test
      - store_test_results:
          path: reports
      # - slack_notify_if_failed

  build:
    working_directory: << pipeline.parameters.working_directory >>
    docker:
      - image: circleci/python:<< pipeline.parameters.python_version >>
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python<< pipeline.parameters.python_version >>/site-packages
      - run:
          name: Build library
          command: |
            sudo pip install pipenv
            pipenv run build
      - persist_to_workspace:
          root: << pipeline.parameters.working_directory >>
          paths: .
      # - slack_notify_if_failed

  deploy_library:
    working_directory: << pipeline.parameters.working_directory >>
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.5
    steps:
      - attach_workspace:
          at: << pipeline.parameters.working_directory >>
      - run:
          name: Install package_cloud
          command: |
            gem install package_cloud
      - run:
          name: Deploy to package cloud
          command: package_cloud push cookpad-global/python-internal/python ./dist/*
      - slack_notify_if_failed

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test:
          name: Python << matrix.python_version >> tests
          context:
            - slack_orbs
          filters:
            tags:
              only: /.*/
          matrix:
            parameters:
              python_version: [ "3.8", "3.9", "3.10" ]
      - build:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      - deploy_library:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
